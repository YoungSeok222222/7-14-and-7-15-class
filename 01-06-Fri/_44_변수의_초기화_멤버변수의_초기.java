public class _44_변수의_초기화_멤버변수의_초기 {
    public static void main(String[] args) {
// ch6-38 변수의 초기화

        // - 지역변수(lv)는 수동 초기화 해야함(사용전 꼭!!!)
        // - 멤버변수(iv, cv)는 자동 초기화된다.


        /*
        class InitTest {    // 자동 초기화
             int x;         // 인스턴스 변수
             int y = x;     // 인스턴스 변수

             void method1(0 {   // 수동 초기화
                  int i;        // 지역변수
                  int j = i;    // 에러. 지역변수를 초기화하지 않고 사용
             }
        }
        */
// ==========================================================================================

// ch6-39 멤버변수(iv, cv)의 초기화
// ▶ 클래스 변수 초기화 시점: 클래스가 처음 로딩될 때 단 한번
// ▶ 인스턴스 변수 초기화시점: 인스턴스가 생성될 때마다


        // 1. 명시적 초기화(=):  대입연산자(선언시)

        /*
        class Car{
            int door = 4;               // 기본형(primitive type) 변수의 초기화
            Engine e = new Engine();    // 참조형(reference type) 변수의 초기화
                                                참조형 변수가 가질 수 있는 값(null, 객체 주소)

        }
        */

        // 2. 초기화 블럭(복잡한 초기화)
            // - 인스턴스 초기화 블럭: {}        iv 거의 안 씀
            // - 클래스 초기화 블럭: static {}   cv


        // 3. 생성자(iv 초기화, 복잡한 초기화)
            /*
            Car(string color, String gearType, int door) {  // 매개변수있는 생성자
                  this.color = color;
                  this.gearType = gearType;
                  this.door = door;
            }
            */

// 초기화 종류(cv, iv)
        // 1. 자동 초기화 0
        // 2. 간단 초기화 =
        // 3. 복잡 초기화 {}, static{}, 생성자
        //                     cv       iv


/*
class StaticBlockTest {
     static int[] arr = new int[10];    // 명시적 초기화

     static {
        for (int i=0; i<arr.length; i++) {  // 클래스 초기화 블럭 - 배열 arr을 난수로 채운다.
                arr[i] = (int)(Math.random(0*10)+1;
        }
}
*/

// 초기화 순서
        // 1. CV -> IV
        // 2. 자동 -> 간단 -> 복잡
        //     0      =      static{}, 생성자







/*
변수의 초기화 :
* 지역변수(lv)는 수동 초기화(사용전필수!!, 성능상의 문제 때문에)
* 멤버변수(iv)는 자동 초기화(초기화 해줘야 할 것이 너무 많기에)

- 명시적 초기화 (= <- 대입 연산자로 처리, 간단 초기화)
* 참조형 변수 : null 기본값(엄밀히 말하면 초기화가 아님), 객체주소, 객체를 만들어 넣어줘야 엄밀히 말하면 명시적 초기화

- 초기화 블럭 : 인스턴스 초기화 블럭({}), 클래스 초기화 블럭(static {})

- 생성자 : iv 초기화, 복잡한 초기화

- cv, iv 초기화 : 자동초기화,간단초기화,복잡초기화

- 멤버변수 초기화 :
* 클래스 변수 초기화 시점 : 클래스가 처음 로딩 될 때 단 한번
* 인스턴스 변수 초기화 시점 : 인스턴스 생성될 때 마다



*/


    }
}
